package com.sample
 

import com.sample.DroolsTest.Question;


// POZIOM DRZEWA 0
rule "Init"
	when
	then
	 	Question question = new Question(new String[] {"What type of movie do they feel like watching?",
    					"Take us on an adventure!","We love to laugh!", "We're big sports fans!",
    					"We have a soft spot for animation!", "We like to sing and dance!",
    					"We're animal lovers!", "We want to be wowed!"});
    	// zadaj pytanie
    	question.Ask();
    	insert(question);
end

// POZIOM DRZEWA 1
rule "type - adventure"
	when
		question : Question(content == "What type of movie do they feel like watching?",
							chosen == "Take us on an adventure!")
	then
		Question newQuestion = new Question(new String[] {"Can they handle action scenes?","No","Yes"});
		Question newQuestion2 = new Question(new String[] {"In the mood for some time travel?",
    					"Yes","We prefer alternate worlds", "Only if It's chronogical"});
    	newQuestion.Ask();
    	newQuestion2.Ask();
		insert(newQuestion);
		insert(newQuestion2);
end

rule "type - laugh"
	when
		question : Question(content == "What type of movie do they feel like watching?",
							chosen == "We love to lough!")
	then
		Question newQuestion = new Question(new String[] {"What's your family's sense of humor?",
							"Served with a side of values","Dark","Bright & cheery"});
		newQuestion.Ask();
		insert(newQuestion);
end

rule "type - sports"
	when
		question : Question(content == "What type of movie do they feel like watching?",
							chosen == "We're big sports fans!")
	then
		Question newQuestion = new Question(new String[] {"What's your sport of choice?",
						"Football","Hockey","Baseball","Basketball"});
		newQuestion.Ask();
		insert(newQuestion);
end

rule "type - animation"
	when
		question : Question(content == "What type of movie do they feel like watching?",
							chosen == "We have a soft spot for animation!")
	then
		Question newQuestion = new Question(new String[] {"How about Pixar?",
    					"No, Disney classic", "Yes", "No, and not Disney either"});
    	Question newQuestion2 = new Question(new String[] {"Do you enjoy hearing your kids sing the same song over and over?",
    					"A little variety would be nice","Yes"});
    	newQuestion.Ask();
    	newQuestion2.Ask();
    	insert(newQuestion);
    	insert(newQuestion2);
end

rule "type - dance"
	when
		question : Question(content == "What type of movie do they feel like watching?",chosen == "We like to sing and dance!")
	then
		Question newQuestion = new Question(new String[] {"Are the hills alive?", "No, but lions and scarecrows seem to be", "Yes"});
    	Question newQuestion2 = new Question(new String[] {"Is it the holidays?","Halloween counts!","Yes"});
    	newQuestion.Ask();
    	newQuestion2.Ask();
    	insert(newQuestion);
    	insert(newQuestion2);
end

rule "type - animals"
	when
		question : Question(content == "What type of movie do they feel like watching?",
							chosen == "We're animal lovers!")
	then
		Question newQuestion = new Question(new String[] {"Do you feel like crying?",
						"Yes", "Only if it has a happy ending",
    					"Only if It's at the beginning and I have plenty of time to recover", "No"});
		newQuestion.Ask();
		insert(newQuestion);
end

rule "type - wow"
	when
		question : Question(content == "What type of movie do they feel like watching?",
							chosen == "We want to be wowed!")
	then
		Question newQuestion = new Question(new String[] {"Do They like magic?","Yes","Kinda, but They want more action"});
    	Question newQuestion2 = new Question(new String[] {"I want to show them one of the greatest movies ever made","Yes","No"});
  		Question newQuestion3 = new Question(new String[] {"I want to show them something great from my childhood","Yes","No"});
    	newQuestion.Ask();
    	newQuestion2.Ask();
    	newQuestion3.Ask();
    	insert(newQuestion);
    	insert(newQuestion2);
    	insert(newQuestion3);
end


// POZIOM DRZEWA 2
rule "action - no"
	when
		question : Question(content == "Can they handle action scenes?", chosen == "No")
	then
		question.setResult("Wall-E");
		
end

rule "action - yes"
	when
		question : Question(content == "Can they handle action scenes?", chosen == "Yes")
	then
		Question newQuestion = new Question(new String[] {"Are They easily spooked?","Yes","They can take it"});
		newQuestion.Ask();
		insert(newQuestion);
end

rule "time travel - yes"
	when
		question : Question(content == "In the modd for some time travel?", chosen == "Yes")
	then
		question.setResult("Back to the future");
end

rule "time travel - alternate worlds"
	when
		question : Question(content == "In the modd for some time travel?", chosen == "We prefer alternate worlds")
	then
		Question newQuestion = new Question(new String[] {"Do your kids like Looney Tunes?",
    					"Yes", "Sure, but They'd like to see something different, too"});
    	newQuestion.Ask();
    	insert(newQuestion);
end

rule "time travel - chronological"
	when
		question : Question(content == "In the modd for some time travel?", chosen == "Only if it's chronological")
	then 
		question.setResult("forest gump");
end

rule "sense of humor - side of values"
	when
		question : Question(content == "What's your family's sense of humor?", chosen == "Served with a side of values")
	then
		Question newQuestion = new Question(new String[] {"Macaulay Culkin: co-starring or headline?",
    					"Supporting role", "Star of the show"});
    	newQuestion.Ask();
    	insert(newQuestion);
end

rule "sense of humor - dark"
	when
		question : Question(content == "What's your family's sense of humor?", chosen == "Dark")
	then
		Question newQuestion = new Question(new String[] {"The more bad jokes the better?", "Yes", "We'd like a bit of slapstick"});
		newQuestion.Ask();
		insert(newQuestion);
end

rule "sense of humor - bright and cheery"
	when
		question : Question(content == "What's your family's sense of humor?", chosen == "Bright & cheery")
	then
		Question newQuestion = new Question(new String[] {"Do you speak squirrel?", "Yes", "We're still learning"});
		newQuestion.Ask();
		insert(newQuestion);
end

rule "sport of choice - Football"
	when
		question : Question(content == "What's your sport of choice?", chosen == "Football")
	then
		Question newQuestion = new Question(new String[] {"Wants to take a 'feels' trip?", "Yes", "No, let's keep it light"});
		newQuestion.Ask();
		insert(newQuestion);
end

rule "sport of choice - Hockey"
	when
		question : Question(content == "What's your sport of choice?", chosen == "Hockey")
	then
	    Question newQuestion = new Question(new String[] {"Interested in a true story?","Yes","Nope, just truly awesome"});
		newQuestion.Ask();
		insert(newQuestion);
end

rule "sport of choice - Baseball"
	when
		question : Question(content == "What's your sport of choice?", chosen == "Baseball")
	then
		Question newQuestion = new Question (new String[] {"The Sandlot?", "Yes", "Wendy Peffercorn is a bit much"});
		newQuestion.Ask();
		insert(newQuestion);
		
end

rule "sport of choice - Basketball"
	when
		question : Question(content == "What's your sport of choice?", chosen == "Basketball")
	then
		Question newQuestion = new Question(new String[] {"Are there rules that say a dog can't play basketball?", "Yes", "No"});
		newQuestion.Ask();
		insert(newQuestion);
end

rule "Pixar - No, Disney"
	when
		question : Question(content == "How about Pixar?", chosen == "No, Disney classic")
	then
		Question newQuestion = new Question(new String[] {"Would you like cute mice to save the day?", "Yes", "No"});
		newQuestion.Ask();
		insert(newQuestion);
end

rule "Pixar - Yes"
	when
		question : Question(content == "How about Pixar?", chosen == "Yes")
	then
		Question newQuestion = new Question(new String[] {"Did Star Command send you on a mission?","No, The old guy with balloons did", "Yes"});
    	newQuestion.Ask();
    	insert(newQuestion);
end

rule "Pixar - No, and not Disney"
	when
		question : Question(content == "How about Pixar?", chosen == "No, and not Disney either")
	then
		Question newQuestion = new Question(new String[] {"Would you enjoy a Don Bluth classic?","Yes","Double yes!"});
		newQuestion.Ask();
		insert(newQuestion);
end

rule "sing over and over - a variety would be nice"
	when
		question : Question(content == "Do you enjoy hearing your kids sing the same song over and over?", chosen =="A little variety would be nice")
	then
		question.setResult("alladin");
end

rule "sing over and over - yes"
	when
		question : Question(content == "Do you enjoy hearing your kids sing the same song over and over?",
			chosen == "Yes")
	then
		question.setResult("Frozen");
end

rule "hills alive - No"
	when
		question : Question(content == "Are the hills alive?", chosen == "No, but lions and scarecrows seem to be" )
	then
		question.setResult("the wizard of oz");
end

rule "hills alive - Yes"
	when
		question : Question(content == "Are the hills alive?", chosen == "Yes")
	then
		question.setResult("the sound of music");
end

rule "holidays - Halloween"
	when
		question : Question(content == "Is it the holidays?", chosen == "Halloween counts!")
	then

		question.setResult("the nightmare before christmas");
end

rule "holidays - Yes"
	when
		question : Question(content == "Is it the holidays?", chosen == "Yes")
	then

		question.setResult("scrooge");
end

rule "crying - Yes"
	when
		question : Question(content == "Do you feel like crying?", chosen == "Yes")
	then 
		question.setResult("Turner & Hooch");
end

rule "crying - only if happy ending"
	when
		question : Question(content == "Do you feel like crying?", chosen == "Only if it has a happy ending")
	then
		question.setResult("The lion king");
end

rule "crying - only if at the beginning"
	when
		question : Question(content == "Do you feel like crying?",
			chosen =="Only if It's at the beginning and I have plenty of time to recover")
	then
		question.setResult("Bambi");
end

rule "crying - No"
	when
		question : Question(content == "Do you feel like crying?", chosen == "No")
	then
		question.setResult("Jumanji");
end

rule "magic - Yes"
	when
		question : Question(content=="Do they like magic?", chosen == "Yes")
	then
		question.setResult("Harry Potter series");
end

rule "magic - kinda"
	when
		question : Question(content == "Do they like magic?", chosen == "Kinda, but They want more action")
	then
		question.setResult("the lord of the rings series");
end


rule "greatest ever made - yes"
	when
		question : Question(content == "I want to show them one of the greatest movies ever made",
			chosen == "Yes")
	then
		question.setResult("the princes bride");
end

rule "greatest ever made - no"
	when
		question : Question(content == "I want to show them one of the greatest movies ever made",
			chosen == "Ok, the greatest movie ever made")
	then
		question.setResult("star wars episode 4: a new hope");
end

rule "childhood - yes"  // dla "no" koniec sciezki
	when
		question : Question(content == "I want to show them something great from my childhood",
			chosen == "Yes")
	then
		Question newQuestion = new Question(new String[] {"Is good dialogue a must?","Yes","No"});
		newQuestion.Ask();
		insert(newQuestion);
end

// POZIOM DRZEWA 3


rule "easily spooked - Yes"
	when
		question : Question(content == "Are They easily spooked?", chosen == "Yes")
	then
		question.setResult("The goonies");
end

rule "easily spooked - can take it"
	when
		question : Question(content == "Are They easily spooked?", chosen == "They can take it")
	then
		question.setResult("Indiana Jones");
end

rule "Looney Tunes - Yes"
	when
		question : Question(content == "Do your kids like Looney Tunes?", chosen == "Yes")
	then 
		question.setResult("who framed roger rabbit?");
end

rule "Looney Tunes - somthing different"
	when
		question : Question(content == "Do your kids like Looney Tunes?",
			chosen == "Sure, but They'd like to see something different, too")
	then
		question.setResult("ferngully");
end

rule "Macaulay - supporting"
	when
		question : Question(content == "Macaulay Culkin: co-starring or headline?", 
			chosen == "Supporting role")
	then
		question.setResult("uncle buck");
end

rule "Macaulay - star"
	when
		question : Question(content == "Macaulay Culkin: co-starring or headline?", 
			chosen == "Star of the show")
	then
		question.setResult("home alone");
end

rule "more bad jokes - yes"
	when
		question : Question(content == "The more bad jokes the better?", chosen == "Yes")
	then
		question.setResult("The Addams family");
end

rule "more bad jokes - No"
	when
		question : Question(content == "The more bad jokes the better?",
			chosen == "We'd like a bit of slapstick")
	then
		question.setResult("Ghostbusters");
end

rule "squirrel - Yes"
	when
		question : Question(content == "Do you speak squirrel?", chosen =="Yes")
	then
		question.setResult("the emperor's new groove");
end

rule "squirrel - still learning"
	when
		question : Question(content == "Do you speak squirrel?", chosen == "We're still learning")
	then
		question.setResult("Ice age");
end

rule "'feels' trip - Yes"
	when
		question : Question(content == "Wants to take a 'feels' trip?", chosen == "Yes")
	then
		question.setResult("Remember the titans");
end

rule "'feels' trip - No"
	when
		question : Question(content == "Wants to take a 'feels' trip?", chosen == "No")
	then
		question.setResult("Little giants");
end

rule "true story - Yes"
	when
		question : Question(content == "Interested in a true story?", chosen == "Yes")
	then
		question.setResult("Miracle");
end

rule "true story - No"
	when
		question : Question(content == "Interested in a true story?", chosen == "Nope, just truly awesome")
	then
		question.setResult("the might ducks");
end

rule "the sandlot - Yes"
	when
		question : Question(content == "The Sandlot?", chosen == "Yes")
	then
		question.setResult("the sandlot");
end

rule "the sandlot - No"
	when
		question : Question(content == "The Sandlot?", chosen == "Wendy Peffercorn is a bit much")
	then
		// check this
		Question newQuestion = new Question(new String[] {"Rookie of the year?", "Yes", "Now my kids are purposely slipping on baseballs"});
		newQuestion.Ask();
		insert(newQuestion);
end

rule "dogs play basketball - Yes"
	when
		question : Question(content == "Are there rules that say a dog can't play basketball?",
			chosen == "Yes")
	then
		question.setResult("Hoosters");
end

rule "dogs play basketball - No"
	when
		question : Question(content == "Are there rules that say a dog can't play basketball?",
			chosen == "No")
	then
		question.setResult("Air Bud");
end

rule "cute mice - Yes"
	when
		question : Question(content == "Would you like cute mice to save the day?",
			chosen == "Yes")
	then
	 	question.setResult("The rescuers");
end

rule "cute mice - No"
	when
		question : Question(content == "Would you like cute mice to save the day?",
			chosen == "No")
	then
		question.setResult("the beauty and the beast");
end

rule "star command mission - No"
	when
		question : Question(content == "Did Star Command send you on a mission?", chosen == "No, The old guy with balloons did")
	then
		question.setResult("Up");
end

rule "star command mission - Yes"
	when
		question : Question(content == "Did Star Command send you on a mission?",
			chosen == "Yes")
	then
		question.setResult("Toy Story");
end

rule "Don Bluth - Yes"
	when
		question : Question(content == "Would you enjoy a Don Bluth classic?", chosen =="Yes")
	then
		question.setResult("all dogs go to heaven");
end

rule "Don Bluth - double Yes"
	when
		question : Question(content == "Would you enjoy a Don Bluth classic?", chosen =="Double yes!")
	then
		question.setResult("The land before time");
end

rule "good dialogue - Yes"
	when
		question : Question(content=="Is good dialogue a must?", chosen== "Yes")
	then
		question.setResult("e.t.");
end

rule "good dialogue - No"
	when
		question : Question(content=="Is good dialogue a must?", chosen == "No")
	then
		question.setResult("Fantasia  or other");
end

// POZIOM DRZEWA 4
rule "rookie - Yes"
	when
		question : Question(content =="Rookie of the year?", chosen == "Yes")
	then
		question.setResult("rookie of the year");
end

rule "rookie - No"
	when
		question : Question(content =="Rookie of the year?", chosen == "Now my kids are purposely slipping on baseballs")
	then
		question.setResult("Little big league");
end

